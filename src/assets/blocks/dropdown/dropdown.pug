- var MAX_ITEMS_VALUE = 10;
- var MIN_ITEMS_VALUE = 0;
//- почему-то const выдает ошибку (has already been declared),
//- как если бы была общая область видимости с js-файлом.

//- example of description object
- 
  var dropdownGuests = {
    name: "guests", 
    extraClasses: {
      dropdownClass: "dropdown_guests", 
    },

    content: {
      title: "dropdown",
      input: "Сколько гостей",
      items: {
        adults: "Взрослые",
        kids: "Дети",
        babies: "Младенцы"
      },
      counters: {
        adults_num: 0,
        kids_num: 0,
        babies_num: 0
      },   
    },
    //- покажем кнопки "Очистить" и "применить"?
    showButtons: true,
    //-showReset действует, только если shohwButtons: true
    showReset: false, 
  }

  var dropdownRooms = {
    name: "rooms", 
    extraClasses: {
      dropdownClass: "dropdown_rooms", 
    },

    content: {
      title: "dropdown",
      input: "2 спальни, 2 кровати...",
      items: {
        bedrooms: "Спальни",
        beds: "Кровати",
        bathrooms: "Ванные комнаты"
      },
      counters: {
        rooms_num: 2,
        beds_num: 2,
        bathrooms_num: 0
      },   
    },
    //- покажем кнопки "Очистить" и "применить"?
    showButtons: false, 
    }

mixin dropdown(obj, expanded)
  -  
    let {name, extraClasses = {} } = obj;
    let {title, input, items, counters, } = obj.content;
    let {inputClass = "", containerClass = "", dropdownClass = ""} = extraClasses;

    if (expanded === true) {
      inputClass = "dropdown__input_expanded";
      containerClass = "dropdown__items-container_expanded";
    }

  .dropdown(data-name= name class= dropdownClass)
    .dropdown__title #{title}
    .dropdown__input(class= inputClass) #{input}
    .dropdown__items-container(class= containerClass)
      - let itemsVals = Object.values(items);
      - let itemsNums = Object.values(counters);
      - for (let i = 0; i < itemsVals.length; i++)
        .dropdown__item
          span.dropdown__item-name #{itemsVals[i]}
          .dropdown__trigger
            - let disableMinus = itemsNums[i] === MIN_ITEMS_VALUE ? "dropdown__minus_disabled" : "";
            .dropdown__minus(class= disableMinus) -
            span.dropdown__counter  !{itemsNums[i]} 
            - let disablePlus = itemsNums[i] === MAX_ITEMS_VALUE ? "dropdown__plus_disabled" : "";
            .dropdown__plus(class= disablePlus) +
      if (obj.showButtons)
        .dropdown__buttons
          .dropdown__button-reset(hidden= !obj.showReset) Очистить                    
          .dropdown__button-apply Применить